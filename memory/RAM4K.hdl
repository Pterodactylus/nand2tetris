// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM4K[address(t)](t)
 *     Write: If load(t-1) then RAM4K[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    /**
     * Use an 8-way demux to select one of eight RAM512 blocks.
     * Use first 3 bits to select the block.
     */
    DMux8Way(in=load, sel=address[0..2], a=w1, b=w2, c=w3, d=w4, e=w5, f=w6, g=w7, h=w8);

    /**
     * In a selected RAM512 block, select a specific register.
     * Output result.
     */
    RAM512(in=in, load=w1, address=address[3..11], out=ram0);
    RAM512(in=in, load=w2, address=address[3..11], out=ram1);
    RAM512(in=in, load=w3, address=address[3..11], out=ram2);
    RAM512(in=in, load=w4, address=address[3..11], out=ram3);

    RAM512(in=in, load=w5, address=address[3..11], out=ram4);
    RAM512(in=in, load=w6, address=address[3..11], out=ram5);
    RAM512(in=in, load=w7, address=address[3..11], out=ram6);
    RAM512(in=in, load=w8, address=address[3..11], out=ram7);

    /**
     * Hence, use an 8-way 16-bit Mux to select which RAM512 outputs
     * the value.
     */
    Mux8Way16(a=ram0, b=ram1, c=ram2, d=ram3, e=ram4, f=ram5, g=ram6, h=ram7, sel=address[0..2], out=out);
}
